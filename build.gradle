plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.5.10'
  id 'idea'
  id 'com.diffplug.spotless' version '5.12.5'
}

group = 'de.tobi6112'

repositories {
  mavenCentral()
}

ext {
  slf4jVersion = '1.7.30'
  hopliteVersion = '1.4.1'
  discord4jVersion = '3.1.5'
  junitVersion = '5.7.2'
  kotlinVersion = '1.5.10'
}

dependencies {
  implementation 'com.github.ajalt.clikt:clikt:3.2.0'
  implementation "com.discord4j:discord4j-core:$discord4jVersion"
  implementation 'io.github.microutils:kotlin-logging-jvm:2.0.6'
  implementation "com.sksamuel.hoplite:hoplite-core:$hopliteVersion"
  implementation "com.sksamuel.hoplite:hoplite-yaml:$hopliteVersion"
  implementation 'io.projectreactor:reactor-tools'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
  implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

  runtimeOnly "org.slf4j:slf4j-api:$slf4jVersion"
  runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"

  testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"

  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
  useJUnitPlatform()
}

compileKotlin {
  kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '11'
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

jar {
  manifest {
    attributes('Main-Class': 'de.tobi6112.landau.LandauKt')
  }
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

task createProperties(dependsOn: processResources) {
  doLast {
    new File("$buildDir/resources/main/version.properties").withWriter { w ->
      Properties p = new Properties()
      p['version'] = project.version.toString()
      p.store w, null
    }
  }
}

classes {
  dependsOn createProperties
}

spotless {
  ratchetFrom 'origin/master'

  format 'misc', {
    target '*.gradle', '*.md', '.gitignore'

    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }

  kotlin {
    ktfmt()
    diktat('0.5.3').configFile("diktat-analysis.yml")
  }
}
